3.0.14
======
- Fixed inconsistent restricted variable access check due to caching.
- Improved detection of restricted expression execution scenarios.
- Improved detection of restricted usages of view names in direct request input.


3.0.13
======
- Fixed CVE-2021-43466: Specific scenarios in template injection may lead to remote code execution.
- Fixed incorrect double-unescaping of request parameters breaking processing of forms during restricted mode checks.
- Fixed SpringStandardDialect not allowing the use of a custom IStandardConversionService.


3.0.12
======
- Fixed memory leak at ThymeleafViewResolver when redirects were being performed to dynamically built URLs.
- Forbidden execution of view names as a fragment expressions if such view name is contained in the URL path
  or query parameters.
- Added instantiation of new objects and calls to static classes as forbidden operations in restricted mode.
- Added encode() method to the #mvc expression utility object.
- Adapted Spring WebFlow support to Spring WebFlow 2.5 after changes in API (WebFlow 2.5.0+ is now required).


3.0.11
======
- Fixed non-blocking resolution of variables assuming a mutable model map and causing exception when adding
  reactive variables for resolution using the WebFlux.Fn framework.
- Fixed JPMS "Automatic-Module-Name" entry in MANIFEST.MF: Was "thymeleaf-spring5" but hyphen is a forbidden
  character. New value is "thymeleaf.spring5".


3.0.10
======
- Fixed th:field executing before th:remove and therefore potentially executing the ConversionService and the
  RequestDataValueProcessor for values that are not meant to be displayed in the HTML result, which could lead
  to unnecessary exceptions.
- Fixed bean validation path not correctly binding expressions with brackets ([...]) when BindStatus was being
  obtained with optional = true.
- Added support for non-blocking resolution (before View rendering) of reactive variables specified by dialects
  as execution attributes.
- Avoided blocking in the (reactive) resolution of the WebSession returned by the SeverWebExchange in WebFlux apps.
- Added a "renderHiddenMarkersBeforeCheckboxes" flag to SpringStandardDialect (also configurable from
  SpringTemplateEngine) in order to instruct th:field to render the <input type="hidden" ...> associated with
  checkbox fields before the checkbox itself and not after, in order to improve compatibility with several CSS-based
  frameworks.
- Added a "producePartialOutputWhileProcessing" flag (default: true) to ThymeleafView and ThymeleafViewResolver in
  order to be able to specify whether Thymeleaf should start producing output as soon as possible during template
  processing (as is default) or on the contrary it should only start sending results to the web server's
  output buffers when processing of the template has completely finished and output is rendered in memory.
- Added "Automatic-Module-Name: thymeleaf-spring5" to MANIFEST.MF for Java 9+ JPMS.


3.0.9
=====
- Fixed bean validation mechanism trying to create BindStatus for unbound objects because of an improper use of
  a Spring 5 validation API.
- Fixed RequestDataValueProcessor not being applied in Spring WebFlux applications.
- Adapted Spring-based tag processors to new scenarios for restricted expression evaluation.


3.0.8
=====
- Fixed RequestDataValueProcessor being called without a default "action" attribute (with GET value) for
  forms that included th:action, which resulted in CSRF token being added as a request parameter to the URL
  in some scenarios.
- Added "th:uerrors" attribute in order to easily output all selected errors without escaping the error messages.
- Added "fullModeViewNames" and "chunkedModeViewNames" properties to ThymeleafReactiveViewResolver so that
  the way the "maxResponseChunkSize" property is applied to templates can be fine-tuned. Templates can now be forced
  to be executed in FULL mode, or specific sets of templates can be selected to be the only ones executed as CHUNKED.
- Improved DATA-DRIVEN mode behaviour so that it now causes a flush of the server's output channels for every
  output chunk produced (even if no max response chunk size has been set).
- Added the SpringWebFluxContext class as a base implementation of ISpringWebFluxContext, useful for calling the
  SpringWebFluxTemplateEngine cleanly from outside a ThymeleafReactiveView.
- Added the capability to set a prefix to the names and IDs of SSE events, so that HTML events coming from different
  executions of Thymeleaf in DATA-DRIVEN mode can be combined at the controller for UI composition in a single
  event stream and then easily discriminated at the JavaScript side by the corresponding EventSource objects.
- Removed the ReactiveLazyContextVariable context variable wrapper in order to avoid confusion with the way
  lazy evaluation of non-data-driven reactive variables worked.
- Set the default size of the buffers of elements generated by the data driver in DATA-DRIVEN mode to 10.
- Updated Spring Framework dependencies to 5.0.0.RELEASE.
- Updated SLF4j dependency to 1.7.25.


3.0.7.RC1
=========
- Fixed exception being thrown when more than one ConversionService is available at the application context
  (e.g. in scenarios where Spring Cloud Stream is present).


3.0.6.M4
========
- Added automatic negotiation of ContentType at the ViewResolver depending on view name (file extension).
- Improved instances of dynamic class loading by making references package-relative for better resilience
  to package renaming.


3.0.5.M3
========
- (No changes)


3.0.4.M2
========
- Improved startup times at the template engine by means of lazy initialization of dialect artifacts.
- Improve behaviour of SpringContextUtils.getApplicationContext(): avoided cast exception when ApplicationContext
  is not available.
- Added support for rendering Server-Sent Events (SSE) with content-type "text/event-stream" in Spring 5 WebFlux
  when Thymeleaf is executing in reactive-friendly data-driven mode.
- Updated Spring Framework dependency to 5.0.0.M5.


3.0.3.M1
========
- First release of thymeleaf-spring5, includes
  * Support for Spring 5 Web MVC
  * Support for Spring 5 Web Reactive
